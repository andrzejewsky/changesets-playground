name: Check pick

on:
  pull_request:
    branches:
      - main
    types: ["closed", "labeled"]

jobs:
  cherry_pick:
    runs-on: ubuntu-latest
    name: Cherry pick into release branch
    if: ${{ github.event.pull_request.merged == true }}
    steps:
      - name: Obtain release
        run: |
          labels='${{ toJSON(github.event.pull_request.labels.*.name) }}'
          release_label=$(jq -r '.[] | select(contains("release:"))' <<< $labels)
          version=$(sed "s/release://g" <<< $release_label)
          echo "TARGET_VERSION=$version" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cherry pick into ${{ env.TARGET_VERSION }}
        env:
          PR_BRANCH: pick-${{ github.event.pull_request.head.ref }}-${{ env.TARGET_VERSION }}
          ORIGIN_BRANCH: origin/${{ env.TARGET_VERSION }}
          MERGE_COMMIT: ${{ github.event.pull_request.merge_commit_sha }}
        run: |
          echo $PR_BRANCH
          echo $ORIGIN_BRANCH
          echo $MERGE_COMMIT
          echo ${{ env.TARGET_VERSION }}
          echo $TARGET_VERSION


          # git config --global user.name "github-actions[bot]"
          # git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # git fetch origin ${{ env.TARGET_VERSION }}
          # git checkout $PR_BRANCH $ORIGIN_BRANCH
          # git cherry-pick $MERGE_COMMIT
          # git push origin ${{ env.TARGET_VERSION }}