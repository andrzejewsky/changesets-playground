name: Check pick

on:
  pull_request:
    branches:
      - main
    types: ["closed", "labeled"]

jobs:
  cherry_pick:
    runs-on: ubuntu-latest
    name: Cherry pick into release branch
    if: ${{ github.event.pull_request.merged == true }}
    steps:
      - name: Obtain release
        run: |
          labels='${{ toJSON(github.event.pull_request.labels.*.name) }}'
          release_label=$(jq -r '.[] | select(contains("release:"))' <<< $labels)
          version=$(sed "s/release://g" <<< $release_label)
          echo "TARGET_VERSION=$version" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cherry pick into ${{ env.TARGET_VERSION }}
        env:
          PR_BRANCH: pick-${{ github.event.pull_request.head.ref }}-${{ env.TARGET_VERSION }}
          ORIGIN_BRANCH: origin/${{ env.TARGET_VERSION }}
          MERGE_COMMIT: ${{ github.event.pull_request.merge_commit_sha }}
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git remote update
          git fetch --all
          git fetch origin "$TARGET_VERSION"
          git checkout -b "$PR_BRANCH" "$ORIGIN_BRANCH"
          git cherry-pick "$MERGE_COMMIT"
          git push -u origin "$PR_BRANCH"

          gh pr create
            --title "Pick #$PULL_REQUEST_NUMBER" \
            --body "Pick #$PULL_REQUEST_NUMBER" \ 
            --base $TARGET_VERSION \
            --head $PR_BRANCH